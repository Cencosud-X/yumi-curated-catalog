import { z } from 'zod';
export declare const AlertStatus: z.ZodEnum<["PENDING", "ON_PROGRESS", "COMPLETED"]>;
export declare const alertSchema: z.ZodObject<{
    primarysid: z.ZodString;
    state: z.ZodEnum<["PENDING", "ON_PROGRESS", "COMPLETED"]>;
    country: z.ZodString;
    local: z.ZodString;
    createdAt: z.ZodDefault<z.ZodDate>;
    updatedAt: z.ZodDefault<z.ZodDate>;
    ean: z.ZodString;
    product: z.ZodObject<{
        ean: z.ZodString;
        price: z.ZodNumber;
        ntrStock: z.ZodNumber;
        averageSale: z.ZodNumber;
        image: z.ZodString;
        name: z.ZodString;
        provider: z.ZodString;
        brand: z.ZodString;
        sku: z.ZodString;
        netWeight: z.ZodNumber;
        expirationDate: z.ZodDate;
        usefulLifeLimit: z.ZodDate;
        noticeLevel: z.ZodEnum<["info", "success", "warning", "error", "neutral"]>;
        tally: z.ZodString;
        usefulLifeDays: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        ean: string;
        price: number;
        ntrStock: number;
        averageSale: number;
        image: string;
        name: string;
        provider: string;
        brand: string;
        sku: string;
        netWeight: number;
        expirationDate: Date;
        usefulLifeLimit: Date;
        noticeLevel: "info" | "success" | "warning" | "error" | "neutral";
        tally: string;
        usefulLifeDays: number;
    }, {
        ean: string;
        price: number;
        ntrStock: number;
        averageSale: number;
        image: string;
        name: string;
        provider: string;
        brand: string;
        sku: string;
        netWeight: number;
        expirationDate: Date;
        usefulLifeLimit: Date;
        noticeLevel: "info" | "success" | "warning" | "error" | "neutral";
        tally: string;
        usefulLifeDays: number;
    }>;
    tally: z.ZodOptional<z.ZodString>;
    barcode: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    primarysid: string;
    state: "PENDING" | "ON_PROGRESS" | "COMPLETED";
    country: string;
    local: string;
    createdAt: Date;
    updatedAt: Date;
    ean: string;
    product: {
        ean: string;
        price: number;
        ntrStock: number;
        averageSale: number;
        image: string;
        name: string;
        provider: string;
        brand: string;
        sku: string;
        netWeight: number;
        expirationDate: Date;
        usefulLifeLimit: Date;
        noticeLevel: "info" | "success" | "warning" | "error" | "neutral";
        tally: string;
        usefulLifeDays: number;
    };
    tally?: string | undefined;
    barcode?: string | undefined;
}, {
    primarysid: string;
    state: "PENDING" | "ON_PROGRESS" | "COMPLETED";
    country: string;
    local: string;
    ean: string;
    product: {
        ean: string;
        price: number;
        ntrStock: number;
        averageSale: number;
        image: string;
        name: string;
        provider: string;
        brand: string;
        sku: string;
        netWeight: number;
        expirationDate: Date;
        usefulLifeLimit: Date;
        noticeLevel: "info" | "success" | "warning" | "error" | "neutral";
        tally: string;
        usefulLifeDays: number;
    };
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    tally?: string | undefined;
    barcode?: string | undefined;
}>;
export declare type AlertResponse = z.infer<typeof alertSchema>;
